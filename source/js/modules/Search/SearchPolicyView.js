// Generated by CoffeeScript 1.4.0
(function() {

  define(['BaseView', 'text!modules/Search/templates/tpl_search_policy_row.html'], function(BaseView, tpl_search_policy_row) {
    var SearchPolicyView;
    return SearchPolicyView = BaseView.extend({
      tagName: 'tr',
      events: {
        "click": "open_policy"
      },
      initialize: function(options) {
        this.data = options.model.attributes;
        this.parent = options.container.$el;
        this.target = this.parent.find('table.module-search tbody');
        this.module = options.model.collection.container.module;
        return this.render();
      },
      render: function() {
        this.$el.attr({
          id: this.data.identifiers.InsightPolicyId
        });
        if (this.data.effectiveDate != null) {
          this.data.effectiveDate = this.data.effectiveDate.substr(0, 10);
        }
        this.data.policyStateClass = this.data.policyState.toLowerCase();
        if (this.data.renewalReviewRequired != null) {
          this.data.renewalReviewRequired = this.data.renewalReviewRequired === true ? 'Yes' : 'No';
        } else {
          this.data.renewalReviewRequired = 'No';
        }
        this.data.insured.Address = "";
        if (this.data.insured.address.line1 != null) {
          this.data.insured.Address += "" + this.data.insured.address.line1 + ", ";
        }
        if (this.data.insured.address.city != null) {
          this.data.insured.Address += "" + this.data.insured.address.city + ", ";
        }
        this.$el.html(this.Mustache.render(tpl_search_policy_row, this.data));
        return this.target.append(this.$el);
      },
      destroy: function() {
        this.$el.remove();
        this.model = null;
        return this.el = null;
      },
      open_policy: function(e) {
        var $el, identifiers, params;
        e.preventDefault();
        $el = $(e.currentTarget);
        identifiers = this.model.get('identifiers');
        params = {
          url: identifiers.quoteNumber
        };
        this.module.view.options.controller.launch_module('policyview', params);
        return this.module.view.options.controller.Router.append_module('policyview', params);
      }
    });
  });

}).call(this);

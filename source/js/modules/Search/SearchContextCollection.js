// Generated by CoffeeScript 1.4.0
(function() {

  define(['BaseCollection', 'modules/Search/SearchContextModel', 'modules/Search/SearchContextView', 'base64', 'Store', 'LocalStorageSync', 'Helpers'], function(BaseCollection, SearchContextModel, SearchContextView, Base64, Store, LocalStorageSync, Helpers) {
    var SearchContextCollection;
    return SearchContextCollection = BaseCollection.extend({
      model: SearchContextModel,
      views: [],
      localStorage: new Store('ics_saved_searches'),
      sync: LocalStorageSync,
      rendered: false,
      initialize: function() {},
      render: function(model, menu, search_view) {
        var data;
        menu = menu != null ? menu : $('.search-menu-context');
        data = model.attributes;
        if (_.isObject(data.params)) {
          data.params = Helpers.serialize(data.params);
        }
        return model.view = new SearchContextView({
          parent: menu,
          data: data,
          controller: this.controller,
          collection: this,
          search_view: search_view
        });
      },
      populate: function(menu, search_view) {
        var _this = this;
        $('.search-menu-context tbody tr').not('.renewalreviewrequired').remove();
        return this.each(function(model) {
          return _this.render(model, menu, search_view);
        });
      },
      destroy: function(id) {
        var model;
        model = this.get(id);
        if (model.destroy()) {
          return this.remove(model);
        }
      }
    });
  });

}).call(this);

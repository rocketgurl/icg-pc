// Generated by CoffeeScript 1.3.3
(function() {

  define(['jquery', 'underscore', 'backbone', 'mustache', 'Messenger', 'loader', 'modules/IPM/IPMView', 'amplify'], function($, _, Backbone, Mustache, Messenger, CanvasLoader, IPMView) {
    var IPMModule;
    return IPMModule = (function() {

      IPMModule.prototype.Amplify = amplify;

      function IPMModule(POLICY, CONTAINER, USER) {
        var config,
          _this = this;
        this.POLICY = POLICY;
        this.CONTAINER = CONTAINER;
        this.USER = USER;
        this.ACTION = null;
        console.log(['IPMModule : constructor : policy', this.POLICY]);
        if (!this.POLICY || !this.CONTAINER || !this.USER) {
          throw new Error('FATAL - Missing PolicyModel, HTML Container or User.');
        }
        config = $.getJSON('/js/modules/IPM/config/ipm.json').pipe(function(resp) {
          return resp;
        });
        $.when(config).done(function(resp) {
          return _this.load(resp);
        });
        _.extend(this, Backbone.Events);
        this;

      }

      IPMModule.prototype.load = function(CONFIG) {
        this.CONFIG = CONFIG;
        if (this.CONFIG != null) {
          return this.VIEW = new IPMView({
            MODULE: this
          });
        }
      };

      return IPMModule;

    })();
  });

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['modules/IPM/IPMActionView'], function(IPMActionView) {
    var MakePaymentAction;
    return MakePaymentAction = (function(_super) {

      __extends(MakePaymentAction, _super);

      function MakePaymentAction() {
        this.render = __bind(this.render, this);
        return MakePaymentAction.__super__.constructor.apply(this, arguments);
      }

      MakePaymentAction.prototype.initialize = function() {
        return MakePaymentAction.__super__.initialize.apply(this, arguments);
      };

      MakePaymentAction.prototype.ready = function() {
        return this.fetchTemplates(this.MODULE.POLICY, 'make-payment', this.render);
      };

      MakePaymentAction.prototype.success = function(model, view) {
        return console.log(['MakePayment::success', model, view]);
      };

      MakePaymentAction.prototype.render = function(model, view) {
        var html;
        html = this.MODULE.VIEW.Mustache.render(view, model);
        return this.trigger("loaded", html);
      };

      return MakePaymentAction;

    })(IPMActionView);
  });

}).call(this);

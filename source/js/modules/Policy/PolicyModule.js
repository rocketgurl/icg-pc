// Generated by CoffeeScript 1.4.0
(function() {

  define(['jquery', 'underscore', 'backbone', 'mustache', 'modules/Policy/PolicyView', 'modules/Policy/PolicyModel', 'Messenger', 'loader'], function($, _, Backbone, Mustache, PolicyView, PolicyModel, Messenger, CanvasLoader) {
    var PolicyModule;
    return PolicyModule = (function() {

      PolicyModule.prototype.Amplify = amplify;

      function PolicyModule(view, app, params) {
        this.view = view;
        this.app = app;
        this.params = params;
        if (this.app.params != null) {
          this.params = this.app.params;
        }
        _.extend(this, Backbone.Events);
      }

      PolicyModule.prototype.load = function() {
        var digest, id,
          _this = this;
        if (this.params.id != null) {
          id = this.params.id;
        }
        if (this.params.url != null) {
          if (id == null) {
            id = this.params.url;
          }
        }
        this.policy_model = new PolicyModel({
          id: id,
          urlRoot: this.view.options.controller.services.pxcentral,
          digest: this.view.options.controller.user.get('digest')
        });
        this.policy_view = new PolicyView({
          view: this.view,
          module: this,
          model: this.policy_model
        });
        this.policy_model.on('policy_error', this.throwLoadError, this);
        this.messenger = new Messenger(this.policy_view, this.policy_view.cid);
        digest = this.view.options.controller.user.get('digest');
        window.pol = this.policy_model;
        this.policy_model.fetch({
          headers: {
            'Authorization': "Basic " + digest
          },
          success: function(model, response, options) {
            model.response_state();
            model.setModelState();
            model.get_pxServerIndex();
            return _this.policy_view.trigger('loaded');
          },
          error: function(model, xhr, options) {
            var response;
            _this.render({
              flash_only: true
            });
            _this.view.remove_loader();
            if (xhr.statusText === "error") {
              response = "There was a problem retrieving this policy.";
            } else {
              response = "Sorry, policy " + model.id + " could not be loaded - " + xhr.status + " : " + xhr.statusText;
            }
            return _this.policy_view.trigger('error', response);
          }
        });
        this.on('activate', function() {
          return this.policy_view.trigger('activate');
        });
        return this.on('deactivate', function() {
          return this.policy_view.trigger('deactivate');
        });
      };

      PolicyModule.prototype.throwLoadError = function(model) {
        var msg, xhr;
        xhr = model.get('xhr');
        console.log(['Policy Error', model, xhr]);
        if (xhr.statusText != null) {
          msg = "Could not retrieve policy - " + xhr.statusText;
          this.policy_view.trigger('error', msg);
        }
        return false;
      };

      PolicyModule.prototype.render = function(options) {
        this.view.remove_loader(true);
        if (this.policy_view.render_state === false) {
          return this.policy_view.render(options);
        }
      };

      PolicyModule.prototype.callback_delay = function(ms, func) {
        return setTimeout(func, ms);
      };

      return PolicyModule;

    })();
  });

}).call(this);

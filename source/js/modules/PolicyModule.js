// Generated by CoffeeScript 1.3.3
(function() {

  define(['jquery', 'underscore', 'backbone', 'mustache', 'modules/PolicyView', 'modules/PolicyModel', 'amplify'], function($, _, Backbone, Mustache, PolicyView, PolicyModel, amplify) {
    var PolicyModule;
    return PolicyModule = (function() {

      function PolicyModule(view, app, params) {
        this.view = view;
        this.app = app;
        this.params = params;
        this.load();
      }

      PolicyModule.prototype.load = function() {
        var _this = this;
        this.policy_model = new PolicyModel({
          id: 'c23d82284fb34a25b1cc9bcb4f616ff1',
          urlRoot: this.view.options.controller.services.pxcentral,
          digest: this.view.options.controller.user.get('digest')
        });
        this.policy_view = new PolicyView({
          view: this.view,
          module: this,
          model: this.policy_model
        });
        return this.policy_model.fetch({
          success: function(model, resp) {
            model.response_state();
            switch (model.get('fetch_state').code) {
              case "200":
                model.get_pxServerIndex();
                return _this.render();
              default:
                return amplify.publish('controller', 'warning', "Sorry, that policy could not be retrieved.");
            }
          },
          error: function(model, resp) {
            return amplify.publish('controller', 'warning', "Sorry, that policy could not be retrieved. " + resp);
          }
        });
      };

      PolicyModule.prototype.render = function() {
        this.view.remove_loader();
        return this.policy_view.render();
      };

      PolicyModule.prototype.callback_delay = function(ms, func) {
        return setTimeout(func, ms);
      };

      return PolicyModule;

    })();
  });

}).call(this);

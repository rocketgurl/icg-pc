// Generated by CoffeeScript 1.4.0
(function() {

  define(['BaseCollection', 'modules/ReferralQueue/ReferralTaskModel'], function(BaseCollection, ReferralTaskModel) {
    var ReferralTaskCollection;
    return ReferralTaskCollection = BaseCollection.extend({
      model: ReferralTaskModel,
      initialize: function() {},
      parse: function(response) {
        var json;
        if (response) {
          json = $.fn.xml2json(response);
          _.extend(this, {
            criteria: json.criteria,
            perPage: json.itemsPerPage,
            page: json.page,
            totalItems: json.totalItems
          });
          return json.Task;
        }
        return false;
      },
      success_callback: function(collection, response) {},
      error_callback: function(collection, response) {
        return collection.trigger('error', collection, response);
      },
      getReferrals: function(query, callback) {
        var error_callback, success_callback;
        success_callback = callback || this.success_callback;
        error_callback = this.error_callback;
        query = query || {};
        query = _.extend({
          media: 'application/xml',
          OwningUnderwriter: this.email,
          perPage: 25
        }, query);
        return this.fetch({
          data: query,
          dataType: 'xml',
          contentType: 'application/xml',
          headers: {
            'Authorization': "Basic " + this.digest,
            'X-Authorization': "Basic " + this.digest
          },
          success: function(collection, response) {
            return success_callback.apply(this, [collection, response]);
          },
          error: function(collection, response) {
            return error_callback.apply(this, [collection, response]);
          }
        });
      },
      sortTasks: function(field, direction) {
        this.comparator = function(a, b) {
          var dir;
          dir = direction === 'asc' ? 1 : -1;
          if (a.get(field) < b.get(field)) {
            return dir;
          }
          if (a.get(field) > b.get(field)) {
            return -dir;
          }
          return 0;
        };
        return this.sort();
      }
    });
  });

}).call(this);

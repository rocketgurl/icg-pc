// Generated by CoffeeScript 1.3.3
(function() {

  define(['jquery', 'underscore'], function($, _) {
    var AppRules;
    return AppRules = (function() {

      AppRules.prototype.default_workspace = null;

      function AppRules(app) {
        this.app = app;
        if (this.app.app != null) {
          this.app_name = this.get_app_name(this.app.app);
          this.default_workspace = this.validate_app(this.app_name);
        }
        this;

      }

      AppRules.prototype.validate_app = function(app_name) {
        var modules, validates,
          _this = this;
        modules = this.get_modules(this.app_name);
        validates = _.filter(modules, function(module) {
          return _this.test_module(module);
        });
        return this.combine(validates);
      };

      AppRules.prototype.test_module = function(module) {
        var r, test, _i, _len, _ref;
        test = false;
        if (module['required'] && _.isArray(module['required'])) {
          _ref = module['required'];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            r = _ref[_i];
            if (_.isEmpty(module.app[r]) || module.app[r] === void 0) {
              test = false;
            } else {
              test = true;
            }
          }
        } else {
          test = true;
        }
        return test;
      };

      AppRules.prototype.get_app_name = function(app_name) {
        if (app_name.indexOf('_' >= 0)) {
          return app_name.split('_')[0];
        } else {
          return app_name;
        }
      };

      AppRules.prototype.get_modules = function(app_name) {
        switch (app_name) {
          case 'policies':
            return [this.policy_search];
          case 'rulesets':
            return [this.policy_search, this.add_app(this.rulesets)];
          case 'policyview':
            return [this.add_app(this.policy_view)];
          case 'search':
            return [this.add_app(this.policy_search_params)];
          default:
            return [this.add_app(this["default"])];
        }
      };

      AppRules.prototype.add_app = function(definition) {
        definition.app = this.app;
        if (definition.params != null) {
          definition.app.params = definition.params;
        }
        return definition;
      };

      AppRules.prototype.combine = function(definitions) {
        var definition, _i, _len;
        if (this.app.context != null) {
          this.app.context.application = this.app.app;
          for (_i = 0, _len = definitions.length; _i < _len; _i++) {
            definition = definitions[_i];
            definition.app.context = this.app.context;
          }
        }
        return definitions;
      };

      AppRules.prototype.policy_search = {
        required: false,
        module: 'SearchModule',
        app: {
          app: 'search',
          app_label: 'search',
          tab: '#tpl-workspace-tab-search',
          query: 'stuff',
          other: 'stuff',
          params: null
        }
      };

      AppRules.prototype.policy_search_params = {
        required: false,
        module: 'SearchModule',
        params: null
      };

      AppRules.prototype.policy_view = {
        required: ['params'],
        module: 'PolicyModule'
      };

      AppRules.prototype.rulesets = {
        required: false,
        module: 'TestModule',
        params: null
      };

      AppRules.prototype["default"] = {
        required: false,
        module: 'TestModule',
        params: null
      };

      return AppRules;

    })();
  });

}).call(this);

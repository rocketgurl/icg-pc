// Generated by CoffeeScript 1.3.3
(function() {

  define(['BaseRouter', 'Helpers'], function(BaseRouter, Helpers) {
    var WorkspaceRouter;
    return WorkspaceRouter = BaseRouter.extend({
      routes: {
        'login': 'login',
        'logout': 'logout',
        'workspace/:env/:business/:context/:app/search/*params': 'search',
        'workspace/:env/:business/:context/:app': 'workspace'
      },
      initialize: function(options) {},
      login: function() {
        return this.controller.trigger('login');
      },
      logout: function() {
        this.controller.trigger('logout');
        return this.navigate('login', {
          trigger: true
        });
      },
      search: function(env, business, context, app, params) {
        this.set_controller_state(env, business, context, app, params);
        if (this.controller.config != null) {
          return this.controller.trigger('launch');
        }
      },
      workspace: function(env, business, context, app) {
        this.set_controller_state(env, business, context, app);
        if (this.controller.config != null) {
          return this.controller.trigger('launch');
        }
      },
      set_controller_state: function(env, business, context, app, params) {
        if (params !== 'undefined') {
          params = Helpers.id_safe(decodeURI(params));
        }
        this.controller.current_state = {
          'env': env,
          'business': business,
          'context': context,
          'app': app,
          'params': params != null ? params : null
        };
        return this.controller.set_nav_state();
      },
      append_search: function(params) {
        var app, business, context, env, path, _ref;
        this.controller.current_state.params = params;
        this.controller.set_nav_state();
        _ref = this.controller.current_state, env = _ref.env, business = _ref.business, context = _ref.context, app = _ref.app;
        path = "workspace/" + env + "/" + business + "/" + context + "/" + app + "/search/" + params;
        return this.navigate(path);
      }
    });
  });

}).call(this);
